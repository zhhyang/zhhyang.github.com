{"componentChunkName":"component---src-templates-blog-post-js","path":"/create-react-component/","result":{"data":{"site":{"siteMetadata":{"title":"Freeman 的博客"}},"markdownRemark":{"id":"1fcdd163-078a-52c4-807c-11b26258f898","excerpt":"最近在学习React.js，入门实例教程是学习的阮一峰的博客：React 入门实例教程 下面说的是React 三种创建组建的方式 React.createClass({}) Class 方式 React 在V0.14版本推出了新的实例创建方式 Stateless functional components…","html":"<p>最近在学习React.js，入门实例教程是学习的阮一峰的博客：<a href=\"http://www.ruanyifeng.com/blog/2015/03/react.html\">React 入门实例教程</a></p>\n<h1>下面说的是React 三种创建组建的方式</h1>\n<ol>\n<li>React.createClass({})</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">import React from &#39;react&#39;;\n\nvar HelloMessage = React.createClass({\n  render: function() {\n    return &lt;h1&gt;Hello {this.props.name}&lt;/h1&gt;;\n  }\n});\n\nReactDOM.render(\n  &lt;HelloMessage name=&quot;John&quot; /&gt;,\n  document.getElementById(&#39;example&#39;)\n);</code></pre></div>\n<ol start=\"2\">\n<li>Class 方式</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">import React, {Component, PropTypes} from &#39;react&#39;;\n\nclass HelloMessage extends Component {\n    constructor(props, context) {\n        super(props, context);\n    }\n\n    render() {\n        const {name} = this.props;\n        return (\n            &lt;div&gt;\n                {name}\n            &lt;/div&gt;\n        )\n    }\n};\n\nHelloMessage.propTypes = {\n    name:PropTypes.string.isRequired\n};\n\nexport default HelloMessage;\n\n\n\n\nReactDOM.render(\n  &lt;HelloMessage name=&quot;John&quot; /&gt;,\n  document.getElementById(&#39;example&#39;)\n);</code></pre></div>\n<ol start=\"3\">\n<li>React 在V0.14版本推出了新的实例创建方式 Stateless functional components</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">// A functional component using an ES2015 (ES6) arrow function:\nvar Aquarium = (props) =&gt; {\n  var fish = getFish(props.species);\n  return &lt;Tank&gt;{fish}&lt;/Tank&gt;;\n};\n\n// Or with destructuring and an implicit return, simply:\nvar Aquarium = ({species}) =&gt; (\n  &lt;Tank&gt;\n    {getFish(species)}\n  &lt;/Tank&gt;\n);\n\nThen use: &lt;Aquarium species=&quot;rainbowfish&quot; /&gt;</code></pre></div>\n<h1>分析</h1>\n<ol>\n<li>Stateless更适合简单显示组件</li>\n<li>Class 方式更符合ES2015的使用习惯，复杂组件推荐使用此种写法</li>\n<li>createClass比较古老的书写方式</li>\n</ol>","frontmatter":{"title":"React之组件的三种创建方式","date":"August 02, 2016","description":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/create-react-component/","previous":{"fields":{"slug":"/new-beginnings/"},"frontmatter":{"title":"New Beginnings"}},"next":{"fields":{"slug":"/react-event-inside-map-function/"},"frontmatter":{"title":"React event inside map function"}}}}}